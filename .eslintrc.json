{
  "ignorePatterns": ["dist", "node_modules", "jest.config.js"],
  "extends": [
    "eslint:recommended",
    "plugin:n/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "prettier",
    "plugin:import/recommended",
    "plugin:import/typescript"
  ],
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".ts"
        ],
        "moduleDirectory": [
          "node_modules",
          "src/"
        ]
      },
      "typescript": {}
    }
  },
  "parserOptions": {
    "project": "./tsconfig.general.json",
    "ecmaVersion": 12,
    "sourceType": "module"
  },
  "rules": {
    "@typescript-eslint/consistent-type-definitions": ["error", "type"],
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-var-requires": "off",
    "no-useless-return": "off",
    "object-curly-spacing": ["error", "always"],
    "unicorn/no-array-callback-reference": "off",
    "unicorn/no-array-method-this-argument": "off",
    "indent": "off",
    "import/no-unresolved": 2,
    "import/no-commonjs": 2,
    "import/extensions": [2, "ignorePackages", {
      "ts": "never"
    }],
    "node/no-missing-import": "off",
    "n/no-missing-import": "off",
    "no-plusplus": "off",
    "no-await-in-loop": "off",
    "class-methods-use-this": "off",
    "no-use-before-define": [
      "error",
      {
        "functions": false, // Functions get hoisted, so it's really not an issue
        "classes": true,
        "variables": true
      }
    ],
    "linebreak-style": [
      "error",
      "unix"
    ],
    "quotes": [
      "error",
      "single"
    ],
    "curly": [
      "error",
      "all"
    ],
    "require-yield": 0,
    "eol-last": [
      "error",
      "always"
    ],
    "no-unused-vars": "error",
    "sort-imports": [
      "error",
      {
        "ignoreCase": false,
        "ignoreDeclarationSort": true,
        // don"t want to sort import lines, use eslint-plugin-import instead
        "ignoreMemberSort": false,
        "memberSyntaxSortOrder": [
          "none",
          "all",
          "multiple",
          "single"
        ],
        "allowSeparatedGroups": true
      }
    ],
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          [
            "sibling",
            "parent"
          ],
          "index",
          "unknown"
        ],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ]
  },
  "env": {
    "es2022": true,
    "node": true
  },
  "globals": {
    "logger": true,
    "secrets": true
  },
  "overrides": [
    {
      "files": [
        "tests/**/*"
      ],
      "env": {
        "jest": true
      }
    },
    {
      "files": [
        "**/*.ts"
      ],
      "extends": [
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended"
      ],
      "parser": "@typescript-eslint/parser",
      "plugins": [
        "import",
        "@typescript-eslint"
      ],
      "rules": {
        "no-shadow": "off",
        "no-undef": "off",
        // eslint doesn't play nice with TS global types
        "no-unused-vars": "off",
        // We get this from @typescript-eslint
        "no-loop-func": "off",
        "lines-between-class-members": "off",
        "max-classes-per-file": "off",
        "no-restricted-imports": [
          "error",
          "danger"
        ],
        "@typescript-eslint/array-type": [
          "error",
          {
            "default": "generic",
            "readonly": "generic"
          }
        ],
        "@typescript-eslint/ban-types": "error",
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_"
          }
        ],
        "import/prefer-default-export": "off",
        "import/extensions": "off",
        "no-empty": "warn",
        "@typescript-eslint/no-inferrable-types": "warn",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off"
      }
    }
  ]
}
